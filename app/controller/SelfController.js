/*
 * File: app/controller/SelfController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('mobile.controller.SelfController', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            mainPanel: 'mainpanel',
            selfNavigateView: 'mainpanel #selfNavigateView',
            taskNavigateView: 'mainpanel #taskNavigateView',
            sharedNavigateView: 'mainpanel #sharedNavigateView',
            withdrawal: 'withdrawal'
        },

        control: {
            "mainpanel #self #selfMenuList": {
                itemsingletap: 'onListItemSingletap'
            },
            "withdrawal #claimBtn": {
                tap: 'onClaimBtnTap'
            },
            "myinfo #infoBtn": {
                tap: 'onInfoBtnTap'
            },
            "mypassword #passBtn": {
                tap: 'onButtonTap'
            }
        }
    },

    onListItemSingletap: function(dataview, index, target, record, e, eOpts) {
        // 获取点击的内容id,进行不同的响应操作
        var id = record.data.id;

        var selfNavigateView = this.getSelfNavigateView();

        if(id === 'withdrawal'){ //提现
            var accountBalance = dataview.getItemAt(4);
            var balance = accountBalance.getRecord().data.name; //未提现金额
            balance = balance.substring(4, balance.length-1);

            selfNavigateView.push({
                xtype: 'withdrawal',
                title: record.data.name
            });

            var withdrawal = this.getWithdrawal();
            var balanceLabel = withdrawal.getComponent("labelContainer").getComponent("balance");
            balanceLabel.setHtml("<font color='red'>"+balance+"</font>元");
            balanceLabel.setData(balance);

        } else if(id === 'withdrawalHistory'){ //提现历史
            selfNavigateView.push({
                xtype: 'withdrawalhistory',
                title: record.data.name
            });
            var withdrawalHistoryStore = Ext.getStore('WithdrawalHistoryStore');
            withdrawalHistoryStore.load();

        } else if(id === 'myinfo'){ // 我的资料
            selfNavigateView.push({
                xtype: 'myinfo',
                title: record.data.name
            });

        } else if(id === 'mypassword'){ // 修改密码
            selfNavigateView.push({
                xtype: 'mypassword',
                title: record.data.name
            });

        } else if(id === 'logout'){ // 退出操作
            Ext.Msg.show({
                title: '提示',
                message: '确定要退出？',
                promptConfig: false,
                buttons: [
                    {text: '否',  itemId: 'no'},
                    {text: '是', itemId: 'yes', ui: 'action'}
                ],
                scope: this,
                fn: function(btn) {
                    if(btn === 'yes'){
                        // 清除保存的用户信息
                        var dataStore = Ext.getStore('UserStore');
                        dataStore.load();
                        var user = dataStore.getAt(0);
                        if (user) {
                            user.erase();
                        }

                        var loginPanel = Ext.createByAlias('widget.loginform');
                        var mainpanel = this.getMainPanel();
                        Ext.Viewport.add(loginPanel);
                        loginPanel.show();
                        mainpanel.hide();
                        this.getTaskNavigateView().reset();
                        this.getSharedNavigateView().reset();
                    }
                }
            });

        }
    },

    onClaimBtnTap: function(button, e, eOpts) {
        var withdrawal = this.getWithdrawal();
        var claimAmount = withdrawal.getComponent("claimAmount").getValue();
        var reg = /^[0-9]+(.[0-9]{1,2})?$/;
        if(!reg.test(claimAmount)){
            Ext.Msg.alert("提示", '请输入正确的金额');
            return;
        }

        var balanceLabel = withdrawal.getComponent("labelContainer").getComponent("balance");
        var balance = balanceLabel.getData();
        if(claimAmount > balance){
            Ext.Msg.alert("提示", '提现金额超出余额');
            return;
        }

        button.setDisabled(true);

        var successCallback = function(resp, ops) {
            if(resp.responseText === 'true') {
                var selfMenuStore = Ext.getStore('SelfMenuStore');
                selfMenuStore.load();
                Ext.Msg.alert("提示", '提现成功');

                balance = balance-claimAmount;
                balanceLabel.setHtml("<font color='red'>"+balance+"</font>元");
                balanceLabel.setData(balance);
                withdrawal.getComponent("claimAmount").setValue('');
            } else {
                Ext.Msg.alert("提示", '系统繁忙，请稍后重试');
            }

            button.setDisabled(false);
        };

        var failureCallback = function(resp, ops) {
            button.setDisabled(false);
            Ext.Msg.alert("提示", '网络连接超时');
        };

        Ext.Ajax.request({
            url: "/weixin/mobile/self/withdrawal.htm",
            params: {"amount": claimAmount},
            success: successCallback,
            failure: failureCallback
        });



    },

    onInfoBtnTap: function(button, e, eOpts) {
        var form = button.up('formpanel'),			// Register form
            values = form.getValues();				// Form values

        if(values.wechatName === '') {
            Ext.Msg.alert("提示", '微信号不能为空');
            return;
        }

        button.setDisabled(true);

        // 保存成功
        var successCallback = function(resp, ops) {
            var registerResult = resp.responseText;
            if(registerResult === 'success') {
                var dataStore = Ext.getStore('UserStore');
                dataStore.load();
                var user = dataStore.getAt(0);
                user.data.wechatName = values.wechatName;
                user.data.gender = values.gender;
                user.data.age = values.age;
                user.data.provinceId = values.province;
                user.data.cityId = values.city;
                user.data.positionId = values.position;
                user.save();

                Ext.Msg.alert("提示", '保存成功');
            } else {
                Ext.Msg.alert("提示", '保存失败，请重试');
            }
            button.setDisabled(false);

        };

        // 网络错误
        var failureCallback = function(resp, ops) {
            button.setDisabled(false);
            Ext.Msg.alert("提示", '网络连接超时');
        };

        Ext.Ajax.request({
            url: "/weixin/mobile/self/saveInfo.htm",
            params: values,
            success: successCallback,
            failure: failureCallback
        });
    },

    onButtonTap: function(button, e, eOpts) {
        var form = button.up('formpanel'),
            values = form.getValues(),
            user = mobile.view.MyUtils.getUserInfo();

        if(values.oldPassword === '') {
            Ext.Msg.alert("提示", '旧密码不能为空');
            return;
        } else if(values.newPassword === '') {
            Ext.Msg.alert("提示", '新密码不能为空');
            return;
        } else if(values.newPassword.length>16 || values.newPassword.length<6) {
            Ext.Msg.alert("提示", '密码长度为6到16个字符，请确认');
            return;
        } else if(values.confirmNewPass === '') {
            Ext.Msg.alert("提示", '确认密码不能为空');
            return;
        } else if(values.newPassword !== values.confirmNewPass) {
            Ext.Msg.alert("提示", '密码不一致');
            return;
        } else if(values.oldPassword !== user.password) {
            Ext.Msg.alert("提示", '旧密码不正确');
            return;
        }

        button.setDisabled(true);

        var successCallback = function(resp, ops) {
            var registerResult = resp.responseText;
            if(registerResult === 'success') {
                form.reset();
                var dataStore = Ext.getStore('UserStore');
                dataStore.load();
                var user = dataStore.getAt(0);
                user.data.password = values.newPassword;
                user.save();

                Ext.Msg.alert("提示", '修改成功');
            } else {
                Ext.Msg.alert("提示", '修改失败，请重试');
            }
            button.setDisabled(false);

        };

        var failureCallback = function(resp, ops) {
            button.setDisabled(false);
            Ext.Msg.alert("提示", '网络连接超时');
        };

        Ext.Ajax.request({
            url: "/weixin/mobile/self/savePassword.htm",
            params: values,
            success: successCallback,
            failure: failureCallback
        });
    }

});